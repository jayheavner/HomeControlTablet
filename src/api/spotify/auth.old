import Vue from 'vue';

let auth = new Vue({
  computed: {
    accessToken: {
      get: function() {
        return localStorage.getItem('access_token');
      },
      set: function(accessToken) {
        localStorage.setItem('access_token', accessToken);
      }
    },
    expiresAt: {
      get: function() {
        return localStorage.getItem('expires_at');
      },
      set: function(expiresIn) {
        let expiresAt = JSON.stringify(expiresIn * 1000 + new Date().getTime());
        localStorage.setItem('expires_at', expiresAt);
      }
    },
    scope: {
      get: function() {
        return localStorage.getItem('scope');
      },
      set: function(scope) {
        localStorage.setItem('scope', scope);
      }
    },
    user: {
      get: function() {
        return JSON.parse(localStorage.getItem('user'));
      },
      set: function(user) {
        localStorage.setItem('user', JSON.stringify(user));
      }
    }
  },
  methods: {
    login() {
      window.location.href = 'http://localhost:4040/login';
    },
    logout() {
      return new Promise((resolve, reject) => {
        localStorage.removeItem('access_token');
        localStorage.removeItem('refresh_token');
        localStorage.removeItem('expires_at');
      });
    },
    isAuthenticated() {
      return new Date().getTime() < this.expiresAt;
    },
    handleAuthentication(data) {
      this.accessToken = data.access_token;
      this.refreshToken = data.refresh_token;
      this.expiresAt = data.expires_in;
      this.scope = data.scope;

      return new Promise((resolve) => {
        resolve(data.access_token);
      });
    }
  }
});

export default {
  install: function(Vue) {
    Vue.prototype.$auth = auth;
  }
};