<template>
  <div class="app">
    <!-- Modals -->
    <demo-draggable-modal />

    <!-- Dialogs -->
    <modals-container />

    <v-dialog
      @before-opened="dialogEvent('before-open')"
      @before-closed="dialogEvent('before-close')"
      @opened="dialogEvent('opened')"
      @closed="dialogEvent('closed')"
    />

    <div style="margin-top: 20px; margin-bottom: 15px;">
      <button class="btn" @click="$modal.show('example-draggable')">
        Draggable
      </button>
      <br>
      <button class="btn" @click="showButtonsDialog">
        Dialog: buttons
      </button>
      <br>
      <button class="btn" @click="showDynamicComponentModal">
        Dynamic: Component Modal
      </button>
    </div>
  </div>
</template>

<script>

import DemoDraggableModal   from '@/components/modals/Modal_Draggable.vue';
import CustomComponentModal from '@/components/modals/CustomComponentModal.vue';

export default {
  name: 'ModalDemo',
  components: {
    DemoDraggableModal,
  },
  methods: {
    showButtonsDialog () {
      this.$modal.show('dialog', {
        title: 'Buttons example',
        text: 'You can add an arbitrary number of buttons.',
        buttons: [
          {
            title: 'CANCEL',
            handler: () => {
              this.$modal.hide('dialog');
            }
          },
          {
            title: 'LIKE',
            default: true,
            handler: () => {
              alert('LIKE LIKE LIKE');
            }
          },
          {
            title: 'REPOST',
            handler: () => {
              alert('REPOST REPOST REPOST');
            }
          }
        ]
      });
    },

    showDynamicComponentModal () {
      this.$modal.show(CustomComponentModal, {
        text: 'This text is passed as a property'
      });
    },

    dialogEvent (eventName) {
      console.log('Dialog event: ' + eventName);
    }
  }
};
</script>

